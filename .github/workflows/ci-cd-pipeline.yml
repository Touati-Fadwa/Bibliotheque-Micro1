name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: fadwa
          POSTGRES_DB: bibliotheque_iset
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Backend Dependencies
        working-directory: ./back
        run: npm install

      - name: Install Frontend Dependencies
        working-directory: ./front
        run: npm install

      - name: Verify Database Connection
        run: |
          psql postgres://postgres:fadwa@localhost:5432/bibliotheque_iset -c "SELECT 1 AS connection_test;"

      - name: Check Essential Tables
        run: |
          psql postgres://postgres:fadwa@localhost:5432/bibliotheque_iset -c "\
            SELECT 'users' AS table_name, \
                   CASE WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'users') \
                   THEN 'EXISTS' ELSE 'MISSING' END AS status \
            UNION ALL \
            SELECT 'books' AS table_name, \
                   CASE WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'books') \
                   THEN 'EXISTS' ELSE 'MISSING' END AS status;"

      - name: Build Backend Docker Image
        run: docker build -f back/Dockerfile -t touatifadwa/backend:latest .

      - name: Build Frontend Docker Image
        run: docker build -f front/Dockerfile -t touatifadwa/frontend:latest .

      - name: Login to Docker Hub
        run: docker login -u touatifadwa -p foufou53550880

      - name: Push Backend Image
        run: docker push touatifadwa/backend:latest

      - name: Push Frontend Image
        run: docker push touatifadwa/frontend:latest

      - name: Run Backend Tests
        working-directory: ./back
        env:
          DATABASE_URL: postgres://postgres:fadwa@localhost:5432/bibliotheque_iset
          JWT_SECRET: isettozeursecretkey
        run: npm test

      - name: Run Frontend Tests
        working-directory: ./front
        run: npm test

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Verify Deployment
        run: |
          kubectl get pods -n default
          kubectl get svc -n default